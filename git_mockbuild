#!/bin/bash
##############################################################################################
## a big thank to daniel berteaud from firewall-service who write this script
## the purpose of this script is to create a targ.gz in GIT folder in order to build a rpm  
##############################################################################################
ME=$(whoami)

# What is the package name
# The package name is given by the name of the main folder
PACKAGE=$(basename $(pwd))

# Informations needed from the spec file
VERSION=$(rpm -q --qf "%{version}\n" --specfile $PACKAGE.spec | head -1)
ARCH=$(rpm -q --qf "%{arch}\n" --specfile $PACKAGE.spec | head -1)
RELEASE=$(rpm -q --qf "%{release}\n" --specfile $PACKAGE.spec | head -1)

# Which git branch we are talking
BRANCH=$(git branch | grep '*' | cut -d' ' -f2)

# Find the centos version
DIST=$1
if [[ -z $DIST && "$BRANCH" == "sme9" ]]; then
    DIST="el6"
elif [ -z $DIST ]; then
    DIST="el5"
fi

# Create a tmp folder in /tmp
TMPDIR=$(mktemp -d)
mkdir -p $TMPDIR/$PACKAGE-$VERSION/

# Tag GIT using the version in the spec file
TAG=$VERSION"_"$DIST
git tag -f $TAG 2>&1 > /dev/null

# Create needed dirs on the build box
mkdir -p ~/rpmbuild/{RPMS,SRPMS,SPECS,SOURCES}
mkdir -p ~/exchange


# Generate a tgz archive from the repo
git archive --format=tar --prefix=$PACKAGE-$VERSION/ $BRANCH | tar xf - -C $TMPDIR

# Generate ChangeLog
git log --format=%H | git log --pretty --stdin --no-walk > $TMPDIR/$PACKAGE-$VERSION/CHANGELOG.git

# Create the tar.gz archive 
tar czf $TMPDIR/$PACKAGE-$VERSION.tar.gz -C $TMPDIR $PACKAGE-$VERSION

# cp the spec file and tar.gz
cp $TMPDIR/$PACKAGE-$VERSION.tar.gz ~/rpmbuild/SOURCES/$PACKAGE-$VERSION.tar.gz
cp $PACKAGE.spec ~/rpmbuild/SPECS/

# And build
echo ""
echo "1.Build the src.rpm"
echo ""
cd ~/rpmbuild/SOURCES/  
tar -xvf ~/rpmbuild/SOURCES/$PACKAGE-$VERSION.tar.gz 2>&1 > /dev/null
rpmbuild -bs --nodeps ~/rpmbuild/SPECS/$PACKAGE.spec
echo ""
echo "2.Build with Mock"
echo ""
echo "=============================================================="
echo "The build RPM architecture is $ARCH" 
echo "The target CentOS version is $DIST"

if [[ $ARCH == "noarch" && "$DIST" == "el5" ]]; then
    MOCKCONF="smeserver-8-i386-base"
elif [[ $ARCH == "i386" && "$DIST" == "el5" ]]; then
    MOCKCONF="smeserver-8-i386-base"
elif [[ $ARCH == "x86_64" && "$DIST" == "el5" ]]; then
    MOCKCONF="smeserver-8-x86_64-base"
elif [[ $ARCH == "noarch" && "$DIST" == "el6" ]]; then
    MOCKCONF="smeserver-9-i386-base"
elif [[ $ARCH == "i386" && "$DIST" == "el6" ]]; then
    MOCKCONF="smeserver-9-i386-base"
elif [[ $ARCH == "x86_64" && "$DIST" == "el6" ]]; then
    MOCKCONF="smeserver-9-x86_64-base"
fi

echo "The mock chroot configuration used is  $MOCKCONF"
echo "=============================================================="
echo ""
mock -r $MOCKCONF --rebuild ~/rpmbuild/SRPMS/$PACKAGE-$VERSION-*.src.rpm --resultdir=/home/$ME/exchange/$PACKAGE-$VERSION.$DIST.$ARCH

# a bit of clean

rm -f  ~/rpmbuild/SPECS/$PACKAGE.spec ~/rpmbuild/SOURCES/$PACKAGE-$VERSION.tar.gz ~/rpmbuild/SRPMS/$PACKAGE-$VERSION*.src.rpm
rm -rf $TMPDIR  ~/$PACKAGE-$VERSION 

# we give the path where are files
echo ""
echo "=================================================================================================================="
echo "RPMS are in /home/$ME/exchange/$PACKAGE-$VERSION.$DIST.$ARCH of your build server"
echo ""
ls -1 ~/exchange/$PACKAGE-$VERSION.$DIST.$ARCH/*.rpm
echo "=================================================================================================================="

# and we sign rpm if needed, if not simply do 'enter' with keyboard
echo ""
echo "3.Sign your rpms"
rpm --resign ~/exchange/$PACKAGE-$VERSION.$DIST.$ARCH/*.rpm 2>&1 > /dev/null
